@model Tuple<SurvivalPrep.DBModels.ApplicationUser,IEnumerable<SurvivalPrep.DBModels.Disaster>>

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div>
        <h1>User Details</h1>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayName("Name")
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Item1.UserName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayName("Total Score")
            </dt>
            <dd class="col-sm-10">
                @{
                    var totalscore = 0;
                    foreach (var i in Model.Item1.OwnedItems.ToList())
                    {
                        totalscore = totalscore + i.Item.Score * i.Quantity;
                    }
                }
                @totalscore
            </dd>

        </dl>

        @{
            var count = 1;
            var items = Model.Item1.OwnedItems.ToList();
        }

        <h2> Inventory </h2>
        <div class="accordion">
            <div class="text-center tbloutline">
                <div class="row">
                    <div class="col"><b>Item</b></div>
                    <div class="col"><b>Quantity</b></div>
                    <div class="col"><b>Score Gained</b></div>
                </div>
                <hr class="break" />
                @foreach (var item in items)
                {
                    <div class="row">
                        <div class="col">
                            @Html.DisplayName(item.Item.Name)
                        </div>
                        <div class="col">
                            @Html.DisplayName(item.Quantity.ToString())
                        </div>
                        <div class="col">
                            @Html.DisplayName((item.Item.Score * item.Quantity).ToString())
                        </div>
                    </div>
                    count += 1;
                    @if (count <= items.Count)
                    {
                        <hr class="break" />
                    }
                }
            </div>
        </div>
        <br/>

        @{
            count = 1;
            var items2 = Model.Item2.ToList();
        }

        <h2> Disaster Preparedness</h2>
        <div class="accordion">
            <div class="text-center tbloutline">
                <div class="row">
                    <div class="col"><b>Disaster</b></div>
                    <div class="col"><b>Preparedness</b></div>
                </div>
                <hr class="break" />
                @foreach (var disaster in items2)
                {
                    <div class="row">
                        <div class="col">
                            @Html.DisplayName(disaster.Name)
                        </div>
                        <div class="col">
                            @{
                                var score = 0;
                                foreach (var owneditem in Model.Item1.OwnedItems.ToList())
                                {
                                    foreach (var correspondingdisaster in owneditem.Item.ItemDisasters.ToList())
                                    {
                                        if (disaster.ItemDisasters.Contains(correspondingdisaster))
                                        {
                                            score = score + (owneditem.Item.Score * owneditem.Quantity);
                                        }
                                    }
                                }
                            }
                            @Html.DisplayName(score + "%")
                        </div>
                    </div>
                    count += 1;
                    @if (count <= items2.Count)
                    {
                        <hr class="break" />
                    }
                }
            </div>
        </div>
    </div>


