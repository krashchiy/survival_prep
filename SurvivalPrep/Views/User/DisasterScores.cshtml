<!--
  Author:    Nathan Robbins, Igor Ivanov, Jane Tian
  Date:      Dec. 6, 2019
  Course:    CS 4540, University of Utah, School of Computing
  Copyright: CS 4540 and Nathan Robbins, Igor Ivanov, Jane Tian - This work may not be copied for use in Academic Coursework.

  I, Nathan Robbins, certify that I wrote this code from scratch and did not copy it in part or whole from
  another source.  Any references used in the completion of the assignment are cited in my README file.

  File Contents

     This page shows the scores pertaining to a particular disaster. It includes dynamic links to every other high score page,
    as well as an ordered ranking of user scores.
-->

@{
    ViewData["Title"] = "Disaster Scores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@Html.DisplayName(ViewData["Disaster"] + " Scores")</h1>
<partial name="DisasterLinks" />
<div class="text-center tbloutline">
    <div class="row">
        <div class="col-2">Position</div>
        <div class="col">Name</div>
        <div class="col-2">Score</div>
    </div>
    <hr class="break" />
    @{
        var current = 1;
        var usersScores = (List<Tuple<string, int>>)ViewData["UserScores"];
    }
    @foreach (var user in usersScores)
    {
        <div class="row">
            <div class="col-2">
                @Html.DisplayName(current.ToString())
            </div>
            <div class="col">
                <a asp-controller="User" asp-action="Details" asp-route-username="@user.Item1">
                    @Html.DisplayFor(modelItem => user.Item1)
                </a>
            </div>
            <div class="col-2">
                @Html.DisplayName(user.Item2.ToString())
            </div>
        </div>
        current += 1;
        @if (current <= usersScores.Count)
        {
            <hr class="break" />
        }
    }

</div>
